package models.ticketing;

/**
 * Client Request Ticket
 * See controllers.TicketHandler.java for more information
 */

import play.mvc.*;
import play.libs.F.*;

import ticketing.TicketStatus;
import ticketing.TicketHandler;

public class Ticket {

    private static final TicketHandler TICKETHANDLER = TicketHandler.getInstance();

    public Ticket() {
        this.number = TICKETHANDLER.getNextTicketNumber();
        this.isFinished = false;
        this.setStatus(TicketStatus.QUEUING);
    }

    //Unique Ticket Number generated by TicketHandler
    private String number;
    public String getNumber() {
        return this.number;
    }

    //Holds the response for the client that is eventually sent to it
    private Promise<Result> response;
    public Promise<Result> getResponse() {
        return this.response;
    }
    public void setResponse(Promise<Result> response) {
        this.response = response;
    }

    private boolean isFinished;
    public boolean isFinished() {
        return this.isFinished;
    }
    public void setFinished() {
        this.isFinished = true;
    }

    private TicketStatus status;
    public TicketStatus getStatus() {
        return this.status;
    }
    public void setStatus(TicketStatus status) {
        this.status = status;
    }

    @Override
    public String toString() {
        return this.number;
    }

    @Override
    public boolean equals(Object o) {
        if (this.number == ((Ticket) o).getNumber()) return true;
        return false;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = hash * 31 + Long.valueOf(this.number).hashCode();
        return hash;
    }

}
